<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>My Project: libcnn Namespace Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />

<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">My Project
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.html"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.html"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">libcnn Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibcnn_1_1_conv_pool_layer.html">ConvPoolLayer</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibcnn_1_1_pool.html">Pool</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibcnn_1_1_softmax.html">Softmax</a></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a5b73556a76dfe9867c10ebd14519fb4e">sigmoid</a> (const double &amp;x)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a55bbe6e5488b8a038e5708a32d233090">get_feature_vector</a> (const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, MatrixXd &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a78ed8e63be87c4d06bb363af95ce62ec">softmax2conv</a> (const MatrixXd &amp;, const int &amp;, const int &amp;, const int &amp;, vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a2c5ccad2e675235e71fd5e5641ede4ae">get_parameter</a> (vector&lt; MatrixXd &gt; &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a493fb452cedcc704e189ad1a3656c0ad">online_test</a> (const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, const VectorXi &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const MatrixXd &amp;, const MatrixXd &amp;, const int &amp;, const int &amp;, const int &amp;, const int &amp;, const int &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#ab161d6e7087d097f72c086587a661c4a">normalize</a> (MatrixXd &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a022f9a6378aa94ec418eb757bead690e">data_generation</a> (const int &amp;, const int &amp;, const int &amp;, const int &amp;, vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, VectorXi &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a4afdb4ab6bfd2c2167c593900ef644f5">unit_scaling</a> (vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a0f018efe5349302aba6f349d17cc90cf">label_sampling</a> (const int &amp;, const int &amp;, const int &amp;, const int &amp;, VectorXi &amp;, VectorXi &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a367a409a55921d3810474a42357ff285">rand_classifier</a> (MatrixXd &amp;, MatrixXd &amp;, const vector&lt; int &gt; &amp;, const int &amp;, const int &amp;, const double &amp;, const double &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a449702bcc49494b8e359548d03ba12e3">rand_conv</a> (vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, const vector&lt; int &gt; &amp;, const int &amp;, const int &amp;, const double &amp;, const double &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a6e166be43bf4a7640feef235071df26e">print_params</a> (const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const MatrixXd &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a35fa40f645f5fe20b4cc8d878b1e0c10">print_params</a> (vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, MatrixXd &amp;, MatrixXd &amp;, MatrixXd &amp;, MatrixXd &amp;, MatrixXd &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#affc4a94fd6208861218bf25631d2ab39">print_params</a> (vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;weights, vector&lt; MatrixXd &gt; &amp;biases, vector&lt; MatrixXd &gt; &amp;weight_0, vector&lt; MatrixXd &gt; &amp;weight_1, vector&lt; MatrixXd &gt; &amp;weight_2, MatrixXd &amp;bias_0, MatrixXd &amp;bias_1, MatrixXd &amp;bias_2, MatrixXd weight_class, MatrixXd &amp;bias_class)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class Matrix &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#ab9d1cc7fff65924fba4673d248ce5b84">write_binary</a> (const char *filename, const Matrix &amp;matrix)</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class Matrix &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a08fddcf34488abeb9551fa4ba5f69b02">read_binary</a> (const char *filename, Matrix &amp;matrix)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#aa0d2c742374c714e8acadc2f2768db9e">save</a> (const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const MatrixXd &amp;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacelibcnn.html#a05600c0680e871c0893560d97dce3179">load</a> (const vector&lt; int &gt; &amp;num_kerns, vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, MatrixXd &amp;, MatrixXd &amp;)</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a022f9a6378aa94ec418eb757bead690e"></a><!-- doxytag: member="libcnn::data_generation" ref="a022f9a6378aa94ec418eb757bead690e" args="(const int &amp;, const int &amp;, const int &amp;, const int &amp;, vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, VectorXi &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a022f9a6378aa94ec418eb757bead690e">libcnn::data_generation</a> </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>beginning</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>total_images</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>all_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">VectorXi &amp;&#160;</td>
          <td class="paramname"><em>all_label</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacelibcnn_a022f9a6378aa94ec418eb757bead690e_cgraph.svg" width="336" height="94"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a55bbe6e5488b8a038e5708a32d233090"></a><!-- doxytag: member="libcnn::get_feature_vector" ref="a55bbe6e5488b8a038e5708a32d233090" args="(const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, MatrixXd &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a55bbe6e5488b8a038e5708a32d233090">libcnn::get_feature_vector</a> </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>batch_feature_maps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>feature_vectors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a2c5ccad2e675235e71fd5e5641ede4ae"></a><!-- doxytag: member="libcnn::get_parameter" ref="a2c5ccad2e675235e71fd5e5641ede4ae" args="(vector&lt; MatrixXd &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a2c5ccad2e675235e71fd5e5641ede4ae">libcnn::get_parameter</a> </td>
          <td>(</td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>feature_weights</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a0f018efe5349302aba6f349d17cc90cf"></a><!-- doxytag: member="libcnn::label_sampling" ref="a0f018efe5349302aba6f349d17cc90cf" args="(const int &amp;, const int &amp;, const int &amp;, const int &amp;, VectorXi &amp;, VectorXi &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a0f018efe5349302aba6f349d17cc90cf">libcnn::label_sampling</a> </td>
          <td>(</td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>images</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">VectorXi &amp;&#160;</td>
          <td class="paramname"><em>all_label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">VectorXi &amp;&#160;</td>
          <td class="paramname"><em>true_label</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a05600c0680e871c0893560d97dce3179"></a><!-- doxytag: member="libcnn::load" ref="a05600c0680e871c0893560d97dce3179" args="(const vector&lt; int &gt; &amp;num_kerns, vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, MatrixXd &amp;, MatrixXd &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a05600c0680e871c0893560d97dce3179">libcnn::load</a> </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>num_kerns</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>class_weight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>class_bias</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacelibcnn_a05600c0680e871c0893560d97dce3179_cgraph.svg" width="278" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab161d6e7087d097f72c086587a661c4a"></a><!-- doxytag: member="libcnn::normalize" ref="ab161d6e7087d097f72c086587a661c4a" args="(MatrixXd &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#ab161d6e7087d097f72c086587a661c4a">libcnn::normalize</a> </td>
          <td>(</td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>mat</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a493fb452cedcc704e189ad1a3656c0ad"></a><!-- doxytag: member="libcnn::online_test" ref="a493fb452cedcc704e189ad1a3656c0ad" args="(const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, const VectorXi &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const MatrixXd &amp;, const MatrixXd &amp;, const int &amp;, const int &amp;, const int &amp;, const int &amp;, const int &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a493fb452cedcc704e189ad1a3656c0ad">libcnn::online_test</a> </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>vec_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const VectorXi &amp;&#160;</td>
          <td class="paramname"><em>vec_label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>weight_0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>weight_1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>weight_2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>weight_class</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_class</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>num_kerns1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>num_kerns2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>num_kerns3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>kern_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>pool_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacelibcnn_a493fb452cedcc704e189ad1a3656c0ad_cgraph.svg" width="414" height="94"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a35fa40f645f5fe20b4cc8d878b1e0c10"></a><!-- doxytag: member="libcnn::print_params" ref="a35fa40f645f5fe20b4cc8d878b1e0c10" args="(vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, MatrixXd &amp;, MatrixXd &amp;, MatrixXd &amp;, MatrixXd &amp;, MatrixXd &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a6e166be43bf4a7640feef235071df26e">libcnn::print_params</a> </td>
          <td>(</td>
          <td class="paramtype">vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="affc4a94fd6208861218bf25631d2ab39"></a><!-- doxytag: member="libcnn::print_params" ref="affc4a94fd6208861218bf25631d2ab39" args="(vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;weights, vector&lt; MatrixXd &gt; &amp;biases, vector&lt; MatrixXd &gt; &amp;weight_0, vector&lt; MatrixXd &gt; &amp;weight_1, vector&lt; MatrixXd &gt; &amp;weight_2, MatrixXd &amp;bias_0, MatrixXd &amp;bias_1, MatrixXd &amp;bias_2, MatrixXd weight_class, MatrixXd &amp;bias_class)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a6e166be43bf4a7640feef235071df26e">libcnn::print_params</a> </td>
          <td>(</td>
          <td class="paramtype">vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>weight_0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>weight_1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>weight_2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd&#160;</td>
          <td class="paramname"><em>weight_class</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_class</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a6e166be43bf4a7640feef235071df26e"></a><!-- doxytag: member="libcnn::print_params" ref="a6e166be43bf4a7640feef235071df26e" args="(const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const MatrixXd &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a6e166be43bf4a7640feef235071df26e">libcnn::print_params</a> </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>weight_class</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_class</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a367a409a55921d3810474a42357ff285"></a><!-- doxytag: member="libcnn::rand_classifier" ref="a367a409a55921d3810474a42357ff285" args="(MatrixXd &amp;, MatrixXd &amp;, const vector&lt; int &gt; &amp;, const int &amp;, const int &amp;, const double &amp;, const double &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a367a409a55921d3810474a42357ff285">libcnn::rand_classifier</a> </td>
          <td>(</td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>weight_class</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>bias_class</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>num_kernels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>num_labels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>num_input_maps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>wb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>bb</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a449702bcc49494b8e359548d03ba12e3"></a><!-- doxytag: member="libcnn::rand_conv" ref="a449702bcc49494b8e359548d03ba12e3" args="(vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, vector&lt; MatrixXd &gt; &amp;, const vector&lt; int &gt; &amp;, const int &amp;, const int &amp;, const double &amp;, const double &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a449702bcc49494b8e359548d03ba12e3">libcnn::rand_conv</a> </td>
          <td>(</td>
          <td class="paramtype">vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>num_kernels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>kernel_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>num_labels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>weight_bound</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>bias_bound</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a08fddcf34488abeb9551fa4ba5f69b02"></a><!-- doxytag: member="libcnn::read_binary" ref="a08fddcf34488abeb9551fa4ba5f69b02" args="(const char *filename, Matrix &amp;matrix)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Matrix &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a08fddcf34488abeb9551fa4ba5f69b02">libcnn::read_binary</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Matrix &amp;&#160;</td>
          <td class="paramname"><em>matrix</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa0d2c742374c714e8acadc2f2768db9e"></a><!-- doxytag: member="libcnn::save" ref="aa0d2c742374c714e8acadc2f2768db9e" args="(const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;, const vector&lt; MatrixXd &gt; &amp;, const MatrixXd &amp;, const MatrixXd &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#aa0d2c742374c714e8acadc2f2768db9e">libcnn::save</a> </td>
          <td>(</td>
          <td class="paramtype">const vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const vector&lt; MatrixXd &gt; &amp;&#160;</td>
          <td class="paramname"><em>biases</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>class_weight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>class_bias</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacelibcnn_aa0d2c742374c714e8acadc2f2768db9e_cgraph.svg" width="288" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a5b73556a76dfe9867c10ebd14519fb4e"></a><!-- doxytag: member="libcnn::sigmoid" ref="a5b73556a76dfe9867c10ebd14519fb4e" args="(const double &amp;x)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="namespacelibcnn.html#a5b73556a76dfe9867c10ebd14519fb4e">libcnn::sigmoid</a> </td>
          <td>(</td>
          <td class="paramtype">const double &amp;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td><code> [inline]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a78ed8e63be87c4d06bb363af95ce62ec"></a><!-- doxytag: member="libcnn::softmax2conv" ref="a78ed8e63be87c4d06bb363af95ce62ec" args="(const MatrixXd &amp;, const int &amp;, const int &amp;, const int &amp;, vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a78ed8e63be87c4d06bb363af95ce62ec">libcnn::softmax2conv</a> </td>
          <td>(</td>
          <td class="paramtype">const MatrixXd &amp;&#160;</td>
          <td class="paramname"><em>err_softmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>batch_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>map_hight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>map_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>err_conv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a4afdb4ab6bfd2c2167c593900ef644f5"></a><!-- doxytag: member="libcnn::unit_scaling" ref="a4afdb4ab6bfd2c2167c593900ef644f5" args="(vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#a4afdb4ab6bfd2c2167c593900ef644f5">libcnn::unit_scaling</a> </td>
          <td>(</td>
          <td class="paramtype">vector&lt; vector&lt; MatrixXd &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>all_data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacelibcnn_a4afdb4ab6bfd2c2167c593900ef644f5_cgraph.svg" width="312" height="40"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</p>

</div>
</div>
<a class="anchor" id="ab9d1cc7fff65924fba4673d248ce5b84"></a><!-- doxytag: member="libcnn::write_binary" ref="ab9d1cc7fff65924fba4673d248ce5b84" args="(const char *filename, const Matrix &amp;matrix)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Matrix &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="namespacelibcnn.html#ab9d1cc7fff65924fba4673d248ce5b84">libcnn::write_binary</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Matrix &amp;&#160;</td>
          <td class="paramname"><em>matrix</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>



<hr class="footer"/><address class="footer"><small>
Generated on Mon Feb 23 2015 13:49:14 for My Project by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.6.1
</small></address>

</body>
</html>
